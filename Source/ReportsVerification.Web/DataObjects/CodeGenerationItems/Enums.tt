<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#
   string Greeting = "Hello";
   var namespacePathItems = System.Runtime.Remoting.Messaging.CallContext
		.LogicalGetData("NamespaceHint").ToString()
		.Split('.');
	var namespacePath = namespacePathItems[0] + "." 
		+ namespacePathItems[1] + "." 
		+ namespacePathItems[2] + "." + "Enums";#>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ReSharper disable once CheckNamespace
namespace <#= namespacePath #>
{
	/// <summary>
    /// Справочник категорий пользователя
    /// </summary>
	public enum Categories
	{
<#
		var categories = GetCategories();
		foreach (var category in categories)
        {
#>
		/// <summary>
		/// <#= category.Value#>
		/// </summary>
		<#= category.Key#>,

<#
		}
#>
	}  

	/// <summary>
    /// Справочник режимов пользователя
    /// </summary>
	public enum UserModes
	{
<#
		var modes = GetModes();
		foreach (var mode in modes)
        {
#>
		/// <summary>
		/// <#= mode.Value#>
		/// </summary>
		<#= mode.Key#>,

<#
		}
#>
	}
}
 
<#+
  private static string ConnectionStriong = "data source=CHECKREPORT.bondigital.local;initial catalog=ReportsValidator;persist security info=True;user id=loschilin;password=HondaIntegra2012;MultipleActiveResultSets=True;App=ReportsVerification.Codegeneration"; 

  Dictionary<string, string> GetCategories()
  {
    var result = new Dictionary<string, string>();
	using (var connection = new SqlConnection(ConnectionStriong))
    {
		var query = "SELECT * FROM [dbo].[Categories]";
		var command = new SqlCommand(query, connection);
		connection.Open();
		var reader = command.ExecuteReader();
		while (reader.Read())
        {
			result.Add(reader["Alias"].ToString(), reader["Name"].ToString());
		}
		return result;
	} 
  }

  Dictionary<string, string> GetModes()
  { 
	 var result = new Dictionary<string, string>();
	 using (var connection = new SqlConnection(ConnectionStriong))
     {
		var query = "SELECT * FROM [dbo].[Modes]";
		var command = new SqlCommand(query, connection);
		connection.Open();
		var reader = command.ExecuteReader();
		while (reader.Read())
        {
			result.Add(reader["Alias"].ToString(), reader["Name"].ToString());
		}
		return result;
	}  
  }
#>